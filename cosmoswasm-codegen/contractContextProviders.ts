/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { IQueryClientProvider, ISigningClientProvider, IMessageComposerProvider } from "./contractContextBase";
import { Ics100QueryClient } from "./Ics100.client";
import { Ics100Client } from "./Ics100.client";
import { Ics100 } from "./Ics100.provider";
import { Ics101QueryClient } from "./Ics101.client";
import { Ics101Client } from "./Ics101.client";
import { Ics101 } from "./Ics101.provider";
export interface IContractsContext {
  ics100: IQueryClientProvider<Ics100QueryClient> & ISigningClientProvider<Ics100Client>;
  ics101: IQueryClientProvider<Ics101QueryClient> & ISigningClientProvider<Ics101Client>;
}
export const getProviders = (address?: string, cosmWasmClient?: CosmWasmClient, signingCosmWasmClient?: SigningCosmWasmClient) => ({
  ics100: new Ics100({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  ics101: new Ics101({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  })
});