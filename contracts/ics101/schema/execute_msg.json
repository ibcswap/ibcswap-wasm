{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "MakePool"
      ],
      "properties": {
        "MakePool": {
          "$ref": "#/definitions/MsgMakePoolRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "TakePool"
      ],
      "properties": {
        "TakePool": {
          "$ref": "#/definitions/MsgTakePoolRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "CancelPool"
      ],
      "properties": {
        "CancelPool": {
          "$ref": "#/definitions/MsgCancelPoolRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "SingleAssetDeposit"
      ],
      "properties": {
        "SingleAssetDeposit": {
          "$ref": "#/definitions/MsgSingleAssetDepositRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "MakeMultiAssetDeposit"
      ],
      "properties": {
        "MakeMultiAssetDeposit": {
          "$ref": "#/definitions/MsgMakeMultiAssetDepositRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "CancelMultiAssetDeposit"
      ],
      "properties": {
        "CancelMultiAssetDeposit": {
          "$ref": "#/definitions/MsgCancelMultiAssetDepositRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "TakeMultiAssetDeposit"
      ],
      "properties": {
        "TakeMultiAssetDeposit": {
          "$ref": "#/definitions/MsgTakeMultiAssetDepositRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "MultiAssetWithdraw"
      ],
      "properties": {
        "MultiAssetWithdraw": {
          "$ref": "#/definitions/MsgMultiAssetWithdrawRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "Swap"
      ],
      "properties": {
        "Swap": {
          "$ref": "#/definitions/MsgSwapRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "RemovePool"
      ],
      "properties": {
        "RemovePool": {
          "$ref": "#/definitions/MsgRemovePool"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "SetLogAddress"
      ],
      "properties": {
        "SetLogAddress": {
          "type": "object",
          "required": [
            "address",
            "pool_id"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "pool_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "DepositAsset": {
      "type": "object",
      "required": [
        "balance",
        "sender"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/Coin"
        },
        "sender": {
          "type": "string"
        }
      }
    },
    "MsgCancelMultiAssetDepositRequest": {
      "type": "object",
      "required": [
        "orderId",
        "poolId",
        "sender",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "orderId": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgCancelPoolRequest": {
      "type": "object",
      "required": [
        "poolId",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "poolId": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgMakeMultiAssetDepositRequest": {
      "type": "object",
      "required": [
        "chainId",
        "deposits",
        "poolId",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "chainId": {
          "type": "string"
        },
        "deposits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepositAsset"
          }
        },
        "poolId": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgMakePoolRequest": {
      "type": "object",
      "required": [
        "counterpartyChannel",
        "counterpartyCreator",
        "creator",
        "destinationChainId",
        "liquidity",
        "sourceChainId",
        "sourceChannel",
        "sourcePort",
        "swapFee",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "counterpartyChannel": {
          "type": "string"
        },
        "counterpartyCreator": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "destinationChainId": {
          "type": "string"
        },
        "liquidity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolAsset"
          }
        },
        "sourceChainId": {
          "type": "string"
        },
        "sourceChannel": {
          "type": "string"
        },
        "sourcePort": {
          "type": "string"
        },
        "swapFee": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgMultiAssetWithdrawRequest": {
      "type": "object",
      "required": [
        "counterpartyReceiver",
        "poolId",
        "poolToken",
        "receiver",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "counterpartyReceiver": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        },
        "poolToken": {
          "$ref": "#/definitions/Coin"
        },
        "receiver": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgRemovePool": {
      "type": "object",
      "required": [
        "poolId"
      ],
      "properties": {
        "poolId": {
          "type": "string"
        }
      }
    },
    "MsgSingleAssetDepositRequest": {
      "type": "object",
      "required": [
        "poolId",
        "sender",
        "timeoutHeight",
        "timeoutTimestamp",
        "token"
      ],
      "properties": {
        "poolId": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "token": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "MsgSwapRequest": {
      "type": "object",
      "required": [
        "poolId",
        "recipient",
        "sender",
        "slippage",
        "swapType",
        "timeoutHeight",
        "timeoutTimestamp",
        "tokenIn",
        "tokenOut"
      ],
      "properties": {
        "poolId": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "slippage": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "swapType": {
          "$ref": "#/definitions/SwapMsgType"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "tokenIn": {
          "$ref": "#/definitions/Coin"
        },
        "tokenOut": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "MsgTakeMultiAssetDepositRequest": {
      "type": "object",
      "required": [
        "orderId",
        "poolId",
        "sender",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "orderId": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "MsgTakePoolRequest": {
      "type": "object",
      "required": [
        "counterCreator",
        "creator",
        "poolId",
        "timeoutHeight",
        "timeoutTimestamp"
      ],
      "properties": {
        "counterCreator": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        },
        "timeoutHeight": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "timeoutTimestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "PoolAsset": {
      "type": "object",
      "required": [
        "balance",
        "decimal",
        "side",
        "weight"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/Coin"
        },
        "decimal": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "side": {
          "$ref": "#/definitions/PoolSide"
        },
        "weight": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "PoolSide": {
      "description": "Number of LP tokens to mint when liquidity is provided for the first time to the pool. This does not include the token decimals.",
      "type": "string",
      "enum": [
        "SOURCE",
        "DESTINATION"
      ]
    },
    "SwapMsgType": {
      "type": "string",
      "enum": [
        "LEFT",
        "RIGHT"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
